swagger: "2.0"
info:
  version: "0.0.1"
  title: Authenticated LXD REST API
# during dev, should point to your local machine
host: 192.168.50.4:9000
# basePath prefixes all resource paths 
basePath: /v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  token:
    description: The web token required for authorization
    type: apiKey
    name: token
    in: query
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /authenticate:
    x-swagger-router-controller: auth
    post:
      description: Authenticate a user session and return the auth token
      operationId: signin
      parameters:
        - name: user
          in: body
          description: User
          required: true
          schema:
            $ref: '#/definitions/UserModel'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /serverinfo:
    x-swagger-router-controller: serverinfo
    get:
      security:
        - token: []
      description: Returns server information
      # used as the method name of the controller
      operationId: getServerInfo
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ServerInfoResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"            
  /containers/{name}:
    x-swagger-router-controller: containers
    post:
      security:
        - token: []
      description: Updates a container config
      operationId: updateContainer
      parameters:
        - name: name
          in: path
          description: Container name
          required: true
          type: string
        - name: container
          in: body
          description: Container config data
          required: true
          schema:
            $ref: '#/definitions/ContainerConfigModel'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ContainerCreateResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Rename a container
      operationId: renameContainer
      security:
        - token: []
      parameters:
        - name: name
          in: path
          description: Container name
          required: true
          type: string
        - name: container
          in: body
          description: Container data
          required: true
          schema:
            $ref: '#/definitions/ContainerModel'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ContainerCreateResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns container information
      operationId: getContainer
      security:
        - token: []
      parameters:
        - name: name
          in: path
          description: Container name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ContainerResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /containers:
    x-swagger-router-controller: containers
    get:
      description: Returns a list of containers
      # used as the method name of the controller
      operationId: getAllContainers
      security:
        - token: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ContainersResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new container
      # used as the method name of the controller
      operationId: createContainer
      security:
        - token: []
      parameters:
        - name: container
          in: body
          description: Container data
          required: true
          schema:
            $ref: '#/definitions/ContainerModel'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ContainerCreateResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /containers/detailed:
    x-swagger-router-controller: containers
    get:
      description: Returns a list of containers with extra information
      # used as the method name of the controller
      operationId: getAllContainersWithDetails
      security:
        - token: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ContainersResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /profiles:
    x-swagger-router-controller: profiles
    get:
      description: Returns a list of profiles
      # used as the method name of the controller
      operationId: getAllProfiles
      security:
        - token: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProfilesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /profiles/detailed:
    x-swagger-router-controller: profiles
    get:
      description: Returns a list of profiles with extra information.
      # used as the method name of the controller
      operationId: getAllProfilesWithDetails
      security:
        - token: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProfilesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images:
    x-swagger-router-controller: images
    get:
      description: Returns a list of images.
      # used as the method name of the controller
      operationId: getAllImages
      security:
        - token: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ImagesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images/detailed:
    x-swagger-router-controller: images
    get:
      description: Returns a list of images with extra information.
      # used as the method name of the controller
      operationId: getAllImagesWithDetails
      security:
        - token: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ImagesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images/aliases:
    x-swagger-router-controller: images
    get:
      description: Returns a list of image aliases.
      # used as the method name of the controller
      operationId: getAllImageAliases
      security:
        - token: []
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ImageAliasesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"          
  /swagger.json:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  UserModel:
    required:
      - username
      - password
    properties:
      username:
        description: "User username"
        type: string
        minLength: 1
      password:
        description: "User password"
        type: string
        minLength: 1
  ContainerModel:
    required:
      - name
      - profiles
    properties:
      name:
        type: string
        minLength: 1
      profiles:
        type: array
        items:
          $ref: "#/definitions/ProfileModel"
        minItems: 1
      image:
        type: object
        $ref: "#/definitions/ImageModel"
  ProfileModel:
    required:
      - name
    properties:
      name:
        type: string
  ImageAliasModel:
    required:
      - alias
    properties:
      alias:
        type: string
  ImageModel:
    required:
      - fingerprint
    properties:
      fingerprint:
        type: string
  ContainerConfigModel:
    properties:
      boot.autostart:
        type: boolean
      boot.autostart.delay:
        type: integer
      boot.autostart.priority:
        type: integer
      limits.cpu:
        type: string
      limits.cpu.allowance:
        type: string
      limits.cpu.priority :
        type: integer
      limits.memory:
        type: string
      limits.memory.enforce:
        type: string
      limits.memory.swap:
        type: boolean
      limits.memory.swap.priority:
        type: integer
      security.nesting:
        type: boolean
      security.privileged:
        type: boolean
      volatile.base_image:
        type: string
      volatile.last_state.idmap:
        type: string
      volatile.last_state.power:
        type: string
      limits.memory.enforce:
        type: string
  AuthResponse:
    properties:
      token:
        type: string
      error:
        type: string
  ServerInfoResponse:
    required:
      - serverinfo
    properties:
      serverinfo:
        type: object
  ContainersResponse:
    required:
      - containers
    properties:
      containers:
        type: array
        items:
          $ref: "#/definitions/ContainerModel"
  ProfilesResponse:
    required:
      - profiles
    properties:
      profiles:
        type: array
        items:
          $ref: "#/definitions/ProfileModel"
  ImagesResponse:
    required:
      - images
    properties:
      images:
        type: array
        items:
          $ref: "#/definitions/ImageModel"
  ImageAliasesResponse:
    required:
      - aliases
    properties:
      aliases:
        type: array
        items:
          $ref: "#/definitions/ImageAliasModel"
  ContainerResponse:
    required:
      - container
    properties:
      container:
        $ref: "#/definitions/ContainerModel"
  ContainerCreateResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
